#!/bin/bash

info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }

ask_delete() {
	exit_question=$(
		cat <<-EOF
		$(date) Backup interrupted
		Would you like delete $backup_dir ? [y/N]:
		EOF
		)

	read -rep "$exit_question" reply
	if [[ $reply =~ ^[Yy]$ ]]; then
		sudo rm -rf "$backup_dir"
	fi
}

convertsecs() {
	((h=${1}/3600))
	((m=(${1}%3600)/60))
	((s=${1}%60))
	printf "Backup completed in %02d:%02d:%02d\n" $h $m $s
}

trap 'ask_delete; exit 2' INT TERM

backup_dir="/mnt/bd0/$(hostname)/home"


info "Starting backup in:
$backup_dir"

mkdir -p "$backup_dir"

if df -P -- "$HOME" "$backup_dir" | awk 'NR==2 {dev1=$1} NR==3 {exit($1!=dev1)}'; then
	echo "$HOME and $backup_dir are on the same filesystem"
	rmdir $backup_dir 2>/dev/null || echo "$backup_dir is not empty."
	exit 1
fi

start_time="$(date -u +%s)"

# With yay cache.
# 			--include={'.cache','.cache/yay/***'} \

# "/$USER/VirtualBox VMs/",
# "/$USER/anaconda3/",
# "/$USER/snap/",
# "/$USER/.ansible/",
# "/$USER/.cache/",
# "/$USER/.cfg/",
# "/$USER/.comments/"
# "/$USER/.config/",
# "/$USER/.dbus/"
# "/$USER/.gnome/",
# "/$USER/.gretl/"
# "/$USER/.local/bin/",
# "/$USER/.local/lib/",
# "/$USER/.mozilla/",
# "/$USER/.mume/",
# "/$USER/.pipewire-media-session/",
# "/$USER/.pki/",
# "/$USER/.pylint.d/",
# "/$USER/.rustup/",
# "/$USER/.screenlayout/",
# "/$USER/.steam/",
# "/$USER/.thumbnails/",
# "/$USER/.var/"
# --include=".vscode" 


sudo rsync -aAXHhv --delete --exclude 'yiannis/.cache/*' "${HOME}" "$backup_dir"

end_time="$(date -u +%s)"
convertsecs $(($end_time-$start_time))

unset start_time end_time backup_dir